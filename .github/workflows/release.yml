# Create a release when a release tag is created
on:
  push:
    tags:
      - 'v*.*.*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

jobs:
  build-image:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        IMAGE_TAG:
          - latest
          - ${{ github.ref_name }}
        IMAGE_OS:
          - alpine
          - ubuntu
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Login to dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push to dockerhub
        uses: docker/build-push-action@v5
        with:
          file: docker/Dockerfile.${{matrix.IMAGE_OS}}.cxy
          push: true
          tags: suilteam/cxy:${{ matrix.IMAGE_TAG }}-${{matrix.IMAGE_OS}}
          build-args: |
            RELEASE_TAG=${{ github.ref_name }}
            BUILD_ID=${{ github.run_number }}

  build:
    name: Create Release
    needs: [ build-image ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
